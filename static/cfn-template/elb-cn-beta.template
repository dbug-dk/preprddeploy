{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters" : {
        "vpcId":{
            "Description" : "VPC Id",
            "Type" : "AWS::EC2::VPC::Id"
        },
        "privateSubnet1" : {
            "Description" : "one of the private subnet",
            "Type" : "AWS::EC2::Subnet::Id"
        },
        "privateSubnet2" : {
            "Description" : "the other of the private subnet",
            "Type" : "AWS::EC2::Subnet::Id"
        },
        "publicSubnet1" : {
            "Description" : "one of the public subnet",
            "Type" : "AWS::EC2::Subnet::Id"
        },
        "publicSubnet2" : {
            "Description" : "the other one of the public subnet",
            "Type" : "AWS::EC2::Subnet::Id"
        },
        "preprdelbconnector0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        },
        "preprdelbappserver0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        },
        "preprdelbsefcore0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        },
        "preprdinternalelbappserver0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        },
        "preprdelbappconnector0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        },
        "preprdinternalelbmail0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        },
        "preprdelbdevconnector0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        },
        "preprdelbdal0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        },
        "preprdelbhacache0":{
            "Description" : "if yes, will create this elb and sg",
            "Type" : "String",
            "Default":"no"
        }
    },
    "Conditions":{
        "elbconnector":{"Fn::Equals":[{"Ref":"preprdelbconnector0"},"yes"]},
        "elbappserver":{"Fn::Equals":[{"Ref":"preprdelbappserver0"},"yes"]},
        "elbsefcore":{"Fn::Equals":[{"Ref":"preprdelbsefcore0"},"yes"]},
        "elbappserverinternal":{"Fn::Equals":[{"Ref":"preprdinternalelbappserver0"},"yes"]},
        "elbappconnector":{"Fn::Equals":[{"Ref":"preprdelbappconnector0"},"yes"]},
        "elbmailinternal":{"Fn::Equals":[{"Ref":"preprdinternalelbmail0"},"yes"]},
        "elbdevconnector":{"Fn::Equals":[{"Ref":"preprdelbdevconnector0"},"yes"]},
        "elbdal":{"Fn::Equals":[{"Ref":"preprdelbdal0"},"yes"]},
        "elbhacache":{"Fn::Equals":[{"Ref":"preprdelbhacache0"},"yes"]}
    },
    "Resources": {
        "elbhacache": {
            "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
            "Condition":"elbhacache",
            "Properties": {
        "Subnets": [
          {
            "Ref": "publicSubnet1"
          },
          {
            "Ref": "publicSubnet2"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "HTTP:19191/heartbeat",
          "Timeout": "5",
          "UnhealthyThreshold": "5"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "1020"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "sgElbHacache"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "19191",
            "LoadBalancerPort": "19191",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ],
        "LoadBalancerName": "preprd-elb-hacache-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-elb-hacache-0"
          }
        ]
      }
    },
    "sgElbHacache":{
        "Type" : "AWS::EC2::SecurityGroup",
        "Condition":"elbhacache",
        "Properties" : {
            "GroupDescription" : "security for dal elb",
            "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "19191",
                "ToPort" : "19191",
                "CidrIp" : "0.0.0.0/0"
            }],
            "Tags" : [{
                "Key" : "Name",
                "Value" : "sg-elb-hacache"
            }],
            "VpcId" : {"Ref":"vpcId"}
        }
    },
	"elbdal": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition":"elbdal",
      "Properties": {
        "Subnets": [
          {
            "Ref": "publicSubnet1"
          },
          {
            "Ref": "publicSubnet2"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "HTTP:19191/heartbeat",
          "Timeout": "5",
          "UnhealthyThreshold": "5"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "1020"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "sgElbDal"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "19191",
            "LoadBalancerPort": "19191",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ],
        "LoadBalancerName": "preprd-elb-dal-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-elb-dal-0"
          }
        ]
      }
    },
    "sgElbDal":{
        "Type" : "AWS::EC2::SecurityGroup",
        "Condition":"elbdal",
        "Properties" : {
            "GroupDescription" : "security for dal elb",
            "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "19191",
                "ToPort" : "19191",
                "CidrIp" : "0.0.0.0/0"
            }],
            "Tags" : [{
                "Key" : "Name",
                "Value" : "sg-elb-dal"
            }],
            "VpcId" : {"Ref":"vpcId"}
        }
    },
    "elbdevconnector": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition":"elbdevconnector",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "AWSConsole-SSLNegotiationPolicy-prod-elb-devconnector-1409910526688",
            "PolicyType": "SSLNegotiationPolicyType",
            "Attributes": [
              {
                "Name": "Reference-Security-Policy",
                "Value": "ELBSecurityPolicy-2015-05"
              }
            ]
          },
          {
            "PolicyName": "EnableProxyProtocolPolicy",
            "PolicyType": "ProxyProtocolPolicyType",
            "Attributes": [
              {
                "Name": "ProxyProtocol",
                "Value": "true"
              }
            ],
            "InstancePorts": [
              "50443"
            ]
          }
        ],
        "Subnets": [
          {"Ref":"publicSubnet1"},
           {"Ref":"publicSubnet2"}
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "10",
          "Target": "TCP:50443",
          "Timeout": "5",
          "UnhealthyThreshold": "6"
        },
        "Scheme": "internet-facing",
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "3600"
        },
        "ConnectionSettings": {
          "IdleTimeout": "1020"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Fn::GetAtt":["sgElbDevconnector","GroupId"]
          }
        ],
        "Listeners": [
          {
            "InstancePort": "50443",
            "LoadBalancerPort": "50443",
            "Protocol": "SSL",
            "InstanceProtocol": "TCP",
            "SSLCertificateId": "arn:aws-cn:iam::680812802728:server-certificate/tplinkcloud-com-cn-20190915-connector",
            "PolicyNames": [
              "AWSConsole-SSLNegotiationPolicy-prod-elb-devconnector-1409910526688"
            ]
          }
        ],
        "LoadBalancerName": "preprd-elb-devconnector-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-elb-devconnector-0"
          }
        ]
      }
    },
    "sgElbDevconnector":{
        "Type":"AWS::EC2::SecurityGroup",
        "Condition":"elbdevconnector",
        "Properties":{
            "GroupDescription":"sg for elb sefcore and connector",
            "SecurityGroupIngress":[{
                "IpProtocol":"tcp",
                "FromPort":"50443",
                "ToPort":"50443",
                "CidrIp":"0.0.0.0/0"
            }],
            "Tags":[{
                "Key":"Name",
                "Value":"sg-elb-devconnector"
            }],
            "VpcId":{"Ref":"vpcId"}
        }
    },
    "elbconnector": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition":"elbconnector",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "AWSConsole-SSLNegotiationPolicy-prod-elb-connector-1409910526688",
            "PolicyType": "SSLNegotiationPolicyType",
            "Attributes": [
              {
                "Name": "Reference-Security-Policy",
                "Value": "ELBSecurityPolicy-2015-05"
              }
            ]
          },
          {
            "PolicyName": "EnableProxyProtocolPolicy",
            "PolicyType": "ProxyProtocolPolicyType",
            "Attributes": [
              {
                "Name": "ProxyProtocol",
                "Value": "true"
              }
            ],
            "InstancePorts": [
              "50443"
            ]
          }
        ],
        "Subnets": [
          {"Ref":"publicSubnet1"},
           {"Ref":"publicSubnet2"}
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "10",
          "Target": "TCP:50443",
          "Timeout": "5",
          "UnhealthyThreshold": "6"
        },
        "Scheme": "internet-facing",
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "3600"
        },
        "ConnectionSettings": {
          "IdleTimeout": "1020"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Fn::GetAtt":["sgElbConnector","GroupId"]
          }
        ],
        "Listeners": [
          {
            "InstancePort": "50443",
            "LoadBalancerPort": "50443",
            "Protocol": "SSL",
            "InstanceProtocol": "TCP",
            "SSLCertificateId": "arn:aws-cn:iam::680812802728:server-certificate/tplinkcloud-com-cn-20190915-connector",
            "PolicyNames": [
              "AWSConsole-SSLNegotiationPolicy-prod-elb-connector-1409910526688"
            ]
          }
        ],
        "LoadBalancerName": "preprd-elb-connector-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-elb-connector-0"
          }
        ]
      }
    },
    "elbappserver": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition":"elbappserver",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "AWSConsole-SSLNegotiationPolicy-prod-elb-app-server-1410243608959",
            "PolicyType": "SSLNegotiationPolicyType",
            "Attributes": [
              {
                "Name": "Reference-Security-Policy",
                "Value": "ELBSecurityPolicy-2015-05"
              }
            ]
          }
        ],
        "Subnets": [
          {"Ref":"publicSubnet1"},
           {"Ref":"publicSubnet2"}
        ],
        "HealthCheck": {
          "HealthyThreshold": "3",
          "Interval": "20",
          "Target": "HTTP:8080/",
          "Timeout": "5",
          "UnhealthyThreshold": "3"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "1020"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Fn::GetAtt":["sgElbAppserver","GroupId"]
          }
        ],
        "Listeners": [
          {
            "InstancePort": "8080",
            "LoadBalancerPort": "443",
            "Protocol": "HTTPS",
            "InstanceProtocol": "HTTP",
            "SSLCertificateId": "arn:aws-cn:iam::680812802728:server-certificate/tplinkcloud-com-cn-20190915-web",
            "PolicyNames": [
              "AWSConsole-SSLNegotiationPolicy-prod-elb-app-server-1410243608959"
            ]
          }
        ],
        "LoadBalancerName": "preprd-elb-appserver-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-elb-app-server-0"
          }
        ],
        "Scheme": "internet-facing"
      }
    },
    "elbsefcore": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition":"elbsefcore",
      "Properties": {
        "Policies": [
          {
            "PolicyName": "AWSConsole-SSLNegotiationPolicy-prd-elb-connector-0-1442316562490",
            "PolicyType": "SSLNegotiationPolicyType",
            "Attributes": [
              {
                "Name": "Reference-Security-Policy",
                "Value": "ELBSecurityPolicy-2015-05"
              }
            ]
          }
        ],
        "Subnets": [
            {"Ref":"publicSubnet1"},
           {"Ref":"publicSubnet2"}
        ],
        "HealthCheck": {
          "HealthyThreshold": "3",
          "Interval": "10",
          "Target": "TCP:60443",
          "Timeout": "5",
          "UnhealthyThreshold": "6"
        },

        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "SecurityGroups": [
           {"Fn::GetAtt":["sgElbSefcore","GroupId"]}
        ],
        "LoadBalancerName":"preprd-elb-sefcore-0",
        "Listeners": [
          {
            "InstancePort": "60443",
            "LoadBalancerPort": "60443",
            "Protocol": "SSL",
            "InstanceProtocol": "TCP",
            "SSLCertificateId": "arn:aws-cn:iam::680812802728:server-certificate/tplinkcloud-com-cn-20190915-connector",
            "PolicyNames": [
              "AWSConsole-SSLNegotiationPolicy-prd-elb-connector-0-1442316562490"
            ]
          }
        ],
        "LoadBalancerName":"preprd-elb-sefcore-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-elb-sefcore-0"
          }
        ]
      }
    },
    "elbappserverinternal": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition":"elbappserverinternal",
      "Properties": {
        "Subnets": [
          {"Ref":"privateSubnet1"},
          {"Ref":"privateSubnet2"}
        ],
        "Scheme":"internal",
        "HealthCheck": {
          "HealthyThreshold": "3",
          "Interval": "20",
          "Target": "HTTP:8080/",
          "Timeout": "5",
          "UnhealthyThreshold": "3"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {"Fn::GetAtt":["sgElbAppserverInternal","GroupId"]}
        ],
        "Listeners": [
          {
            "InstancePort": "8080",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ],
        "LoadBalancerName":"preprd-internal-elb-appserver-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-internal-elb-appserver-0"
          }
        ]
      }
    },
    "elbappconnector": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition":"elbappconnector",
      "Properties": {
        "Scheme": "internet-facing",
        "Policies": [
          {
            "PolicyName": "AWSConsole-SSLNegotiationPolicy-prod-elb-app-connector-1419322793314",
            "PolicyType": "SSLNegotiationPolicyType",
            "Attributes": [
              {
                "Name": "Reference-Security-Policy",
                "Value": "ELBSecurityPolicy-2015-05"
              }
            ]
          }
        ],
        "Subnets": [
          {"Ref":"publicSubnet1"},
           {"Ref":"publicSubnet2"}
        ],
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "TCP:50553",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "false",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "1020"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "sgElbAppconnector"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "50553",
            "LoadBalancerPort": "50553",
            "Protocol": "SSL",
            "InstanceProtocol": "TCP",
            "SSLCertificateId": "arn:aws-cn:iam::680812802728:server-certificate/tplinkcloud-com-cn-20190915-web",
            "PolicyNames": [
              "AWSConsole-SSLNegotiationPolicy-prod-elb-app-connector-1419322793314"
            ]
          }
        ],
        "LoadBalancerName": "preprd-elb-appconnector-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-elb-appconnector-0"
          }
        ]
      }
    },
    "elbmailinternal": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Condition":"elbmailinternal",
      "Properties": {
        "Scheme": "internal",
        "Subnets": [
          {
            "Ref": "privateSubnet1"
          },
          {
            "Ref": "privateSubnet2"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "3",
          "Interval": "20",
          "Target": "HTTP:8090/healthCheck",
          "Timeout": "5",
          "UnhealthyThreshold": "3"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "1020"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "sgElbMail"
          }
        ],
        "Listeners": [
          {
            "InstancePort": "8090",
            "LoadBalancerPort": "61080",
            "Protocol": "HTTP",
            "InstanceProtocol": "HTTP"
          }
        ],
        "LoadBalancerName": "preprd-internal-elb-mail-0",
        "Tags": [
          {
            "Key": "Name",
            "Value": "preprd-elb-mail-internal-0"
          }
        ]
      }
    },
    "sgElbMail":{
        "Type" : "AWS::EC2::SecurityGroup",
        "Condition":"elbmailinternal",
        "Properties" : {
            "GroupDescription" : "security for vaserver elb",
            "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "61080",
                "ToPort" : "61080",
                "CidrIp" : "0.0.0.0/0"
            }],
            "Tags" : [{
                "Key" : "Name",
                "Value" : "sg-elb-mailinternal"
            }],
            "VpcId" : {"Ref":"vpcId"}
        }
    },
    "sgElbAppconnector":{
        "Type":"AWS::EC2::SecurityGroup",
        "Condition":"elbappconnector",
        "Properties":{
            "GroupDescription":"sg for elb app connector",
            "SecurityGroupIngress":{
                "IpProtocol":"tcp",
                "FromPort":"50553",
                "ToPort":"50553",
                "CidrIp":"0.0.0.0/0"
            },
            "Tags":[{
                "Key":"Name",
                "Value":"sg-elb-appconnector"
            }],
            "VpcId":{"Ref":"vpcId"}
        }
    },
    "sgElbConnector":{
        "Type":"AWS::EC2::SecurityGroup",
        "Condition":"elbconnector",
        "Properties":{
            "GroupDescription":"sg for elb sefcore and connector",
            "SecurityGroupIngress":[{
                "IpProtocol":"tcp",
                "FromPort":"50443",
                "ToPort":"50443",
                "CidrIp":"0.0.0.0/0"
            }],
            "Tags":[{
                "Key":"Name",
                "Value":"sg-elb-connector"
            }],
            "VpcId":{"Ref":"vpcId"}
        }
    },
    "sgElbSefcore":{
        "Type":"AWS::EC2::SecurityGroup",
        "Condition":"elbsefcore",
        "Properties":{
            "GroupDescription":"sg for elb sefcore and connector",
            "SecurityGroupIngress":[{
                "IpProtocol":"tcp",
                "FromPort":"60443",
                "ToPort":"60443",
                "CidrIp":"0.0.0.0/0"
            }],
            "Tags":[{
                "Key":"Name",
                "Value":"sg-elb-sefcore"
            }],
            "VpcId":{"Ref":"vpcId"}
        }
    },
    "sgElbAppserverInternal":{
        "Type" : "AWS::EC2::SecurityGroup",
        "Condition":"elbappserverinternal",
        "Properties" : {
            "GroupDescription" : "security for vaserver elb",
            "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "80",
                "ToPort" : "80",
                "CidrIp" : "0.0.0.0/0"
            }],
            "Tags" : [{
                "Key" : "Name",
                "Value" : "sg-elb-appserverinternal"
            }],
            "VpcId" : {"Ref":"vpcId"}
        }
    },
    "sgElbAppserver":{
        "Type" : "AWS::EC2::SecurityGroup",
        "Condition":"elbappserver",
        "Properties" : {
            "GroupDescription" : "security for appserver elb",
            "SecurityGroupIngress" : [{
                "IpProtocol" : "tcp",
                "FromPort" : "443",
                "ToPort" : "443",
                "CidrIp" : "0.0.0.0/0"
            }],
            "Tags" : [{
                "Key" : "Name",
                "Value" : "sg-elb-appserver"
            }],
            "VpcId" : {"Ref":"vpcId"}
        }
    }
  }
}
