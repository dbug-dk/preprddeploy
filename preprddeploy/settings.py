#! coding=utf8
"""
Django settings for preprddeploy project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys
import djcelery

djcelery.setup_loader()
BROKER_URL = 'redis://localhost:6379/0'
CELERY_TIMEZONE = 'Asia/Shanghai'
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!n3ft=ayi8d(tkqav*9=zqa)$3thn6nn*un=vg*2(p!*tb&a3c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ADMINS = (
   ('dengken', 'dengken@tp-link.com.cn'),
)
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'guardian',
    'django_ses',
    'djcelery',
    'common',
    'permission',
    'module',
    'elb',
    'basicservice',
    'bizmodule',
    'launcher',
    'deploy',
    'autodeploy'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # this is default
    'guardian.backends.ObjectPermissionBackend',
)

ROOT_URLCONF = 'preprddeploy.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'preprddeploy.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'preprddeploy',
        'HOST': '127.0.0.1',
        'USER': 'root',
        'PASSWORD': 'root'
    }
}

LOGIN_URL = '/user/login'
LOGIN_REDIRECT_URL = '/'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = False

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
if DEBUG:
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'static'),
    ]
else:
    STATIC_ROOT = os.path.join(BASE_DIR, "static")

STATIC_URL = '/static/'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'common': {
            'format': '%(asctime)s|%(levelname)s|%(threadName)s|%(filename)s:%(lineno)d| - %(message)s'
        }
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'common'
        },
        'common': {
            'level': 'DEBUG',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/common.log'),
            'when': 'D',
            'interval': 1,
            'backupCount': 7,
            'formatter': 'common',
            'filters': ['require_debug_false']
        },
        'autodeploy_log': {
            'level': 'DEBUG',
            'filters': ['require_debug_false'],
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/autodeploy.log'),
            'formatter': 'common'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'django.db.backends': {
            'handlers': ['console'],
            'propagate': True,
            'level': 'INFO',
        },
        'common': {
            'handlers': ['common', 'console'],
            'propagate': False,
            'level': 'DEBUG'
        },
        'deploy': {
            'handlers': ['common', 'console', 'autodeploy_log'],
            'propagete': False,
            'level': 'DEBUG'
        }
    }
}


# default launcher parameter for preprd environment
DEFAULT_PREPRD_VPC = {
    "cn-north-1": ['vpc-prd', 'vpc-8d92d2e8']
}
DEFAULT_IMAGE_PATTERN = 'cloud-standard'
DEFAULT_INSTANCE_PROFILE_NAME = 's3_upload'
DEFAULT_SUBNET = {
    "cn-north-1": ["sn-prd-prv-a", "subnet-9058dbf5"],
}
DEFAULT_SECURITY_GROUP = {
    'cn-north-1': ['preprd-sg-internal-server', 'sg-2c399f49'],
}
ELB_MODULES = {
        'connector': ['preprd-elb-connector-0'],
        'appserverinternal': ['preprd-internal-elb-appserver-0'],
        'account_accountweb': ['preprd-elb-accountweb-0'],  # for en
        'appserver': ['preprd-elb-appserver-0'],
        'mail': ['preprd-internal-elb-mail-0'],  # for en: sms?
        'vaserver': ['preprd-elb-vaserver-0', 'preprd-internal-elb-vaserver-0'],  # for en
        'sefcore': ['preprd-elb-sefcore-0'],
        'appconnector': ['preprd-elb-appconnector-0'],
        'devconnector': ['preprd-elb-devconnector-0'],
        'eweb': ['preprd-elb-eweb-0'],  # for en
        'dal': ['preprd-elb-dal-0'],
        'dalForFailover': ['preprd-elb-hacache-0']
}

TOPO_MODULES = ['nat', 'ci_test', 'dns']
# DEVOPS_TOOL = ['logtransfer', 'openfalcon', 'logcatchagent', 'healthcheck']

ACCOUNT_NAME = 'beta'
HOME_PATH = '/home/ubuntu'
STATIC_DIR = os.path.join(BASE_DIR, 'static')
DEVOPS_DIR = os.path.join(HOME_PATH, 'cloud-ops')
KEY_PATH = os.path.join(HOME_PATH, 'pem')
DEPLOY_BUCKET_NAME = 'tplinkcloud-beta-deploy'
# for en
# DEPLOY_BUCKET_NAME = 'cloud-deploy-file'

MODULE_DEPLOY_CONF_DIR = os.path.join(DEVOPS_DIR, 'serviceDeploy/cloud-service-conf')
HOSTS_CACHE_TIME_SECONDS = 60

MAX_WAIT_SECONDS_EVERY_LAYER = 300
MAX_WAIT_SECONDS_EVERY_SERVICE = 90

AUTO_DEPLOY_PROGRESS = {
    'start_env': {
        'order': 1,
        'label': u'启动Pre-Prd环境',
        'child_progress': (
            ('elb.elbcreater.LoadBalancerCreater', u'创建负载均衡器'),
            ('basicservice.servicestarter.BasicServiceStarter', u'启动基础服务'),
            ('bizmodule.bizstarter.BizInstanceStarter', u'启动旧版本业务模块')
        )
    },

    'deploy_first_round': {
        'order': 2,
        'label': u'第一轮新服务部署',
        'child_progress': (
            ('launcher.batchlauncher.Ec2BatchLauncher', u'批量创建新版本EC2实例'),
            ('deploy.deployer.Deployer', u'部署新版本服务')
        )
    },

    'deploy_other_round': {
        'order': 3,
        'label': u'第n轮新服务部署',
        'child_progress': (
            ('deploy.deployer.Deployer', u'部署新版本服务')
        )
    },

    'ami_and_finish_work': {
        'order': 4,
        'label': u'ami制作与环境停止',
        'child_progress': (
            ('deploy.deployer.Deployer', u'替换生产配置', {'method': 'change'}),
            ('deploy.batchamicreater.BatchAmiCreater', u'制作AMI'),
            ('deploy.deployer.Deployer', u'替换预生产配置', {'method': 'changeback'}),
            ('autodeploy.envstopper.EnvStopper', u'停止环境')
        )
    }
}

# ec2 check
JAVA_PATH = "/usr/local/jdk1.7.0_60/bin"
FILES = ["/usr/local/jdk1.7.0_60/bin/java"]
PYTHON_MODULES = ["awscli", "boto", "fabric", "psutil"]
PACKAGES = ['gcc', 'make', 'mysql-client', 'lrzsz', 'zip', 'ntp', 'python-pip']

# mail conf
EMAIL_BACKEND = 'django_ses.SESBackend'
AWS_ACCESS_KEY_ID = 'ACCESS KEY ID'
AWS_SECRET_ACCESS_KEY = 'SECRET KEY'
AWS_SES_AUTO_THROTTLE = None
SERVER_EMAIL = 'SES VALIDATED MAIL'
MAIL_DOMAIN = 'company mail postfix'
MAIL_SUBJECT_PREFIX = u'[Pre-Prd更新]'
MAIL_TEMPLATE_DIR = 'static/mail-template'
